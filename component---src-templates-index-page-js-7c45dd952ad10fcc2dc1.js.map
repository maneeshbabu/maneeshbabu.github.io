{"version":3,"sources":["webpack://@stackrole/gatsby-starter-foundation/./src/components/post-card.js","webpack://@stackrole/gatsby-starter-foundation/./src/components/blog-list-home.js","webpack://@stackrole/gatsby-starter-foundation/./src/templates/index-page.js"],"names":["data","className","sx","bg","frontmatter","featuredImage","Link","to","slug","G","image","childImageSharp","gatsbyImageData","alt","title","variant","color","date","BlogListHome","props","posts","edges","filter","edge","node","map","key","id","PostMaker","markdownRemark","html","Image","sIcons","Icons","icons","index","icon","url","target","tagline","dangerouslySetInnerHTML","__html","cta","ctaLink","ctaText","indexStyles","socialIcons"],"mappings":"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","file":"component---src-templates-index-page-js-7c45dd952ad10fcc2dc1.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst PostCard = ({ data }) => (\n  <article \n    className=\"post-card\"\n    sx={{\n      bg: 'cardBg'\n    }}\n  >\n    {data.frontmatter.featuredImage ? \n      (\n        <Link to={data.frontmatter.slug}>\n          <GatsbyImage\n            image={\n              data.frontmatter.featuredImage.childImageSharp.gatsbyImageData\n            }\n            alt={data.frontmatter.title + \" - Featured image\"}\n            className=\"featured-image\"\n          />\n        </Link>\n      ) : \"\"\n    }\n    <div className=\"post-content\">\n      <h2 className=\"title\">\n        <Link \n          to={data.frontmatter.slug}\n          sx={{\n            variant: 'links.postLink'\n          }}\n        >\n          {data.frontmatter.title}\n        </Link>\n      </h2>\n      <p \n        className=\"meta\"\n        sx={{\n          color: 'muted',\n        }}\n      >\n        <time>{data.frontmatter.date}</time>\n      </p>\n    </div>\n  </article>\n)\n\nexport default PostCard","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Link} from \"gatsby\"\nimport { RiArrowDownLine, RiArrowRightSLine } from \"react-icons/ri\"\n\nimport PostCard from \"./post-card\"\n\nexport default function BlogListHome(props) {\n  const data = props.data\n  const posts = data.edges\n    .filter(edge => !!edge.node.frontmatter.date)\n    .map(edge =>\n      <PostCard key={edge.node.id} data={edge.node} />)\n    return <PostMaker data={posts} />\n}\n\nconst PostMaker = ({ data }) => (\n  <section className=\"home-posts\">\n    <h2>Latest in <strong>Blog</strong> <span className=\"icon -right\"><RiArrowDownLine/></span></h2>\n    <div className=\"grids col-1 sm-2 lg-3\">\n      {data}\n    </div>\n    <Link \n      className=\"button\" \n      to=\"/blog\"\n      sx={{\n        variant: 'links.button'\n      }}\n    >\n      See more<span className=\"icon -right\"><RiArrowRightSLine/></span>\n    </Link>\n  </section>\n)\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { RiArrowRightSLine } from \"react-icons/ri\"\nimport { RiFacebookBoxFill, RiTwitterFill, RiLinkedinBoxFill, RiYoutubeFill, RiInstagramFill, RiRssFill, RiGithubFill, RiTelegramFill, RiPinterestFill, RiSnapchatFill, RiSkypeFill,RiDribbbleFill, RiMediumFill, RiBehanceFill} from \"react-icons/ri\";\nimport { FaWordpress, FaVk} from \"react-icons/fa\";\n\nimport Layout from \"../components/layout\"\nimport BlogListHome from \"../components/blog-list-home\"\nimport SEO from \"../components/seo\"\nimport Icons from \"../util/socialmedia.json\"\n\nexport const pageQuery = graphql`\n  query HomeQuery($id: String!){\n\t\tmarkdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        title\n        tagline\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(\n              layout: CONSTRAINED\n              width: 585\n              height: 439\n            )\n          }\n        }\n        cta {\n          ctaText\n          ctaLink\n        }\n      }\n    }\n    posts : allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\n      limit: 6\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FIXED\n                  width: 345\n                  height: 260\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst HomePage = ({ data }) => {\n  const { markdownRemark, posts } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  const Image = frontmatter.featuredImage\n  ? frontmatter.featuredImage.childImageSharp.gatsbyImageData\n  : \"\"\n  const sIcons = Icons.socialIcons.map((icons, index) => {\n    return(\n      <div key={\"social icons\" + index}>\n        { icons.icon === \"facebook\" ? (<Link to={icons.url} target=\"_blank\"><RiFacebookBoxFill/></Link>) :\"\" }\n        { icons.icon === \"twitter\" ? (<Link to={icons.url} target=\"_blank\"><RiTwitterFill/></Link>) : \"\" }\n        { icons.icon === \"linkedin\" ? (<Link to={icons.url} target=\"_blank\"><RiLinkedinBoxFill/></Link>) : \"\" }\n        { icons.icon === \"youtube\" ? (<Link to={icons.url} target=\"_blank\"><RiYoutubeFill/></Link>) : \"\"}\n        { icons.icon === \"instagram\" ? (<Link to={icons.url} target=\"_blank\"><RiInstagramFill/></Link>) :\"\" }\n        { icons.icon === \"rss\" ? (<Link to={icons.url} target=\"_blank\"><RiRssFill/></Link>) : \"\" }\n        { icons.icon === \"github\" ? (<Link to={icons.url} target=\"_blank\"><RiGithubFill/></Link>) : \"\" }\n        { icons.icon === \"telegram\" ? (<Link to={icons.url} target=\"_blank\"><RiTelegramFill/></Link>) : \"\" }\n        { icons.icon === \"pinterest\" ? (<Link to={icons.url} target=\"_blank\"><RiPinterestFill/></Link>) : \"\" }\n        { icons.icon === \"snapchat\" ? (<Link to={icons.url} target=\"_blank\"><RiSnapchatFill/></Link>) : \"\" }\n        { icons.icon === \"skype\" ? (<Link to={icons.url} target=\"_blank\"><RiSkypeFill/></Link>) : \"\" }\n        { icons.icon === \"wordpress\" ? (<Link to={icons.url} target=\"_blank\"><FaWordpress/></Link>  ) : \"\" }\n        { icons.icon === \"dribbble\" ? (<Link to={icons.url} target=\"_blank\"><RiDribbbleFill/></Link>) : \"\" }\n        { icons.icon === \"medium\" ? (<Link to={icons.url} target=\"_blank\"><RiMediumFill/></Link>) : \"\" }\n        { icons.icon === \"behance\" ? (<Link to={icons.url} target=\"_blank\"><RiBehanceFill/></Link>) : \"\" }\n        { icons.icon === \"vk\" ? (<Link to={icons.url} target=\"_blank\"><FaVk/></Link>   ) : \"\" }\n      </div>\n    )\n  })\n\treturn (\n\t\t<Layout>\n      <SEO/>\n      <div className=\"home-banner grids col-1 sm-2\">\n        <div>\n          <h1 className=\"title\">{frontmatter.title}</h1>\n          <p \n            className=\"tagline\"\n            sx={{\n              color: 'muted'\n            }}\n          >\n            {frontmatter.tagline}\n          </p>\n          <div className=\"description\" dangerouslySetInnerHTML={{__html: html}}/>\n          <Link \n            to={frontmatter.cta.ctaLink} \n            className=\"button\"\n            sx={{\n              variant: 'links.button'\n            }}\n          >\n            {frontmatter.cta.ctaText}<span className=\"icon -right\"><RiArrowRightSLine/></span>\n          </Link>\n          <div  className=\"social-icons\" sx={indexStyles.socialIcons}>\n            {sIcons}\n          </div>\n        </div>\n        <div>\n          {Image ? (\n            <GatsbyImage\n              image={Image}\n              alt={frontmatter.title + \" - Featured image\"}\n              className=\"featured-image\"\n            />\n          ) : \"\"}\n        </div>\n      </div>\n      <BlogListHome data={posts} />\n\t\t</Layout>\n\t)\n}\n\nexport default HomePage\n\nconst indexStyles = {\n  socialIcons: {\n    \"a\":{\n      color: \"socialIcons\",\n      \":hover\":{\n        color:\"socialIconsHover\",\n      }\n    }\n  }\n}\n"],"sourceRoot":""}