{"version":3,"sources":["webpack://@stackrole/gatsby-starter-foundation/./src/templates/blog-post.js"],"names":["styles","pagination","color","Pagination","props","className","sx","previous","frontmatter","template","Link","to","slug","rel","title","next","data","pageContext","markdownRemark","html","excerpt","Image","featuredImage","childImageSharp","gatsbyImageData","description","image","article","date","G","alt","dangerouslySetInnerHTML","__html"],"mappings":"wOASMA,EAAS,CACb,qBAAsB,CACpB,mBAAoB,UAEtBC,WAAY,CACV,EAAK,CACHC,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAMTC,EAAa,SAACC,GAAD,OACjB,eACEC,UAAU,mBACVC,GAAIN,EAAOC,aAEX,kBACMG,EAAMG,UAAoD,cAAxCH,EAAMG,SAASC,YAAYC,WAC7C,mBACI,QAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAMG,SAASC,YAAYI,KAAMC,IAAI,SAC7C,aACEP,GAAI,CACFJ,MAAO,WAGT,gBAAMG,UAAU,eAAa,QAAC,MAAD,OAL/B,cAMA,gBAAMA,UAAU,cAAcD,EAAMG,SAASC,YAAYM,SAI/DV,EAAMW,MAA4C,cAApCX,EAAMW,KAAKP,YAAYC,WACrC,mBACE,QAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAMW,KAAKP,YAAYI,KAAMC,IAAI,SACzC,aACEP,GAAI,CACFJ,MAAO,UAFX,SAIM,gBAAMG,UAAU,gBAAc,QAAC,MAAD,SACpC,gBAAMA,UAAU,cAAcD,EAAMW,KAAKP,YAAYM,YAyDnE,UAjDa,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACZC,EAAmBF,EAAnBE,eACAV,EAA+BU,EAA/BV,YAAaW,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAErBC,EAAQb,EAAYc,cACxBd,EAAYc,cAAcC,gBAAgBC,gBAC1C,GACMjB,EAAmBU,EAAnBV,SAAUQ,EAASE,EAATF,KAEdX,EAAQ,CACVG,WACAQ,QAGF,OACE,QAAC,IAAD,CAAQV,UAAU,SAChB,QAAC,IAAD,CACES,MAAON,EAAYM,MACnBW,YAAajB,EAAYiB,YAAcjB,EAAYiB,YAAcL,EACjEM,MAAOL,EACPM,SAAS,KAEX,mBAAStB,UAAU,cACjB,kBAAQA,UAAU,oBAChB,mBAASA,UAAU,mBACjB,kBAAKG,EAAYM,QACjB,oBAAON,EAAYoB,OAEpBP,GACC,QAAC,EAAAQ,EAAD,CACEH,MAAOL,EACPS,IAAKtB,EAAYM,MAAQ,oBACzBT,UAAU,mBAEV,KAGN,eACEA,UAAU,oBACV0B,wBAAyB,CAAEC,OAAQb,OAGrCZ,GAAYQ,KACZ,QAACZ,EAAeC","file":"component---src-templates-blog-post-js-6d1538a9f05332503aa1.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\n\nimport Layout from \"../components/layout\"\nimport SEO from '../components/seo';\n\nconst styles = {\n  'article blockquote': {\n    'background-color': 'cardBg'\n  },\n  pagination: {\n    'a': {\n      color: 'muted',\n      '&.is-active': {\n        color: 'text'\n      },\n      '&:hover': {\n        color: 'text'\n      }\n    }\n  }\n}\n\nconst Pagination = (props) => (\n  <div \n    className=\"pagination -post\"\n    sx={styles.pagination}\n  >\n    <ul>\n        {(props.previous && props.previous.frontmatter.template === 'blog-post') && (\n          <li>\n              <Link to={props.previous.frontmatter.slug} rel=\"prev\">\n                <p\n                  sx={{\n                    color: 'muted'\n                  }}\n                >\n                  <span className=\"icon -left\"><RiArrowLeftLine/></span> Previous</p>\n                <span className=\"page-title\">{props.previous.frontmatter.title}</span>\n              </Link>\n          </li>\n        )}\n        {(props.next && props.next.frontmatter.template === 'blog-post') && (\n          <li>\n            <Link to={props.next.frontmatter.slug} rel=\"next\">\n              <p\n                sx={{\n                  color: 'muted'\n                }}\n              >Next <span className=\"icon -right\"><RiArrowRightLine/></span></p>\n              <span className=\"page-title\">{props.next.frontmatter.title}</span>\n            </Link>\n          </li>\n        )}\n    </ul>\n  </div>\n)\n\nconst Post = ({ data, pageContext }) => {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html, excerpt } = markdownRemark\n\n  const Image = frontmatter.featuredImage\n  ? frontmatter.featuredImage.childImageSharp.gatsbyImageData\n  : \"\"\n  const { previous, next } = pageContext\n\n  let props = {\n    previous,\n    next\n  }\n\n  return (\n    <Layout className=\"page\">\n      <SEO\n        title={frontmatter.title}\n        description={frontmatter.description ? frontmatter.description : excerpt}\n        image={Image}\n        article={true}\n      />\n      <article className=\"blog-post\">\n        <header className=\"featured-banner\">\n          <section className=\"article-header\">\n            <h1>{frontmatter.title}</h1>\n            <time>{frontmatter.date}</time>\n          </section>\n          {Image ? (\n            <GatsbyImage\n              image={Image}\n              alt={frontmatter.title + \" - Featured image\"}\n              className=\"featured-image\"\n            />\n          ) : \"\"}\n        </header>\n        \n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </article>\n      {(previous || next) && (\n        <Pagination {...props} />\n      )}\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String!) {\n    markdownRemark( \n      id: { eq: $id }\n    ) {\n      id\n      html\n      excerpt(pruneLength: 148)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        description\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}