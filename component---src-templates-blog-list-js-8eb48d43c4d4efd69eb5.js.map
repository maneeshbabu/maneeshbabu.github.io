{"version":3,"sources":["webpack://@stackrole/gatsby-starter-foundation/./src/components/post-card.js","webpack://@stackrole/gatsby-starter-foundation/./src/templates/blog-list.js"],"names":["data","className","sx","bg","frontmatter","featuredImage","Link","to","slug","G","image","childImageSharp","gatsbyImageData","alt","title","variant","color","date","styles","pagination","Pagination","props","isFirst","prevPage","rel","Array","from","length","numPages","_","i","key","blogSlug","currentPage","isLast","nextPage","BlogIndex","render","this","pageContext","toString","posts","allMarkdownRemark","edges","filter","edge","node","map","id","description","React"],"mappings":"mMAgDA,IA3CiB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACf,mBACEC,UAAU,YACVC,GAAI,CACFC,GAAI,WAGLH,EAAKI,YAAYC,eAEd,QAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAKI,YAAYI,OACzB,QAAC,EAAAC,EAAD,CACEC,MACEV,EAAKI,YAAYC,cAAcM,gBAAgBC,gBAEjDC,IAAKb,EAAKI,YAAYU,MAAQ,oBAC9Bb,UAAU,oBAGZ,IAEN,eAAKA,UAAU,iBACb,cAAIA,UAAU,UACZ,QAAC,EAAAK,KAAD,CACEC,GAAIP,EAAKI,YAAYI,KACrBN,GAAI,CACFa,QAAS,mBAGVf,EAAKI,YAAYU,SAGtB,aACEb,UAAU,OACVC,GAAI,CACFc,MAAO,WAGT,oBAAOhB,EAAKI,YAAYa,W,6HCjC1BC,EAAS,CACbC,WAAY,CACV,EAAK,CACHH,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAqCTI,EAAa,SAACC,GAAD,OACjB,eACEpB,UAAU,aACVC,GAAIgB,EAAOC,aAEX,mBACIE,EAAMC,UACN,mBACE,QAAC,EAAAhB,KAAD,CAAMC,GAAIc,EAAME,SAAUC,IAAI,SAC9B,gBAAMvB,UAAU,eAAa,QAAC,MAAD,OAD7B,cAKHwB,MAAMC,KAAK,CAAEC,OAAQN,EAAMO,WAAY,SAACC,EAAGC,GAAJ,OACtC,cAAIC,IAAG,qBAAsBD,EAAI,KAC/B,QAAC,EAAAxB,KAAD,CACEC,GAAE,GAAKc,EAAMW,UAAiB,IAANF,EAAU,GAAKA,EAAI,GAC3C7B,UAAWoB,EAAMY,cAAgBH,EAAI,EAAI,gBAAkB,OAE1DA,EAAI,QAITT,EAAMa,SACN,mBACE,QAAC,EAAA5B,KAAD,CAAMC,GAAIc,EAAMc,SAAUX,IAAI,QAA9B,SACO,gBAAMvB,UAAU,gBAAc,QAAC,MAAD,YAOzCmC,E,6FACJC,OAAA,WAEE,IAAQrC,EAASsC,KAAKjB,MAAdrB,KACR,EAAkCsC,KAAKjB,MAAMkB,YAArCN,EAAR,EAAQA,YAAaL,EAArB,EAAqBA,SACfI,EAAW,SACXV,EAA0B,IAAhBW,EACVC,EAASD,IAAgBL,EACzBL,EAAWU,EAAc,GAAM,EAAID,EAAWA,GAAYC,EAAc,GAAGO,WAC3EL,EAAWH,GAAYC,EAAc,GAAGO,WAExCC,EAAQzC,EAAK0C,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAK1C,YAAYa,QACvC8B,KAAI,SAAAF,GAAI,OACP,QAAC,IAAD,CAAUd,IAAKc,EAAKC,KAAKE,GAAIhD,KAAM6C,EAAKC,UAExCzB,EAAQ,CACVC,UACAC,WACAK,WACAI,WACAC,cACAC,SACAC,YAGF,OACE,QAAC,IAAD,CAAQlC,UAAU,cAChB,QAAC,IAAD,CACEa,MAAO,eAAiBmB,EAAc,OAASL,EAC/CqB,YAAa,4BAA8BhB,EAAc,OAASL,KAEpE,2BACA,eAAK3B,UAAU,yBACZwC,IAEH,QAACrB,EAAeC,K,GApCA6B,aA0CxB","file":"component---src-templates-blog-list-js-8eb48d43c4d4efd69eb5.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst PostCard = ({ data }) => (\n  <article \n    className=\"post-card\"\n    sx={{\n      bg: 'cardBg'\n    }}\n  >\n    {data.frontmatter.featuredImage ? \n      (\n        <Link to={data.frontmatter.slug}>\n          <GatsbyImage\n            image={\n              data.frontmatter.featuredImage.childImageSharp.gatsbyImageData\n            }\n            alt={data.frontmatter.title + \" - Featured image\"}\n            className=\"featured-image\"\n          />\n        </Link>\n      ) : \"\"\n    }\n    <div className=\"post-content\">\n      <h2 className=\"title\">\n        <Link \n          to={data.frontmatter.slug}\n          sx={{\n            variant: 'links.postLink'\n          }}\n        >\n          {data.frontmatter.title}\n        </Link>\n      </h2>\n      <p \n        className=\"meta\"\n        sx={{\n          color: 'muted',\n        }}\n      >\n        <time>{data.frontmatter.date}</time>\n      </p>\n    </div>\n  </article>\n)\n\nexport default PostCard","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React from 'react'\nimport { Link , graphql } from \"gatsby\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/post-card\"\nimport SEO from \"../components/seo\"\n\nconst styles = {\n  pagination: {\n    'a': {\n      color: 'muted',\n      '&.is-active': {\n        color: 'text'\n      },\n      '&:hover': {\n        color: 'text'\n      }\n    }\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\n      limit: $limit\n      skip: $skip\n\t\t) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tfeaturedImage {\n\t\t\t\t\t\t\tchildImageSharp {\n                gatsbyImageData(\n                  layout: CONSTRAINED\n                  width: 345\n                  height: 260\n                )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n          }\n        }\n      }\n    }\n  }\n`\nconst Pagination = (props) => (\n  <div \n    className=\"pagination\"\n    sx={styles.pagination}\n  >\n    <ul>\n      {!props.isFirst && (\n        <li>\n          <Link to={props.prevPage} rel=\"prev\">\n          <span className=\"icon -left\"><RiArrowLeftLine/></span> Previous\n          </Link>\n        </li>\n      )}\n      {Array.from({ length: props.numPages }, (_, i) => (\n        <li key={`pagination-number${i + 1}`} >\n          <Link\n            to={`${props.blogSlug}${i === 0 ? '' : i + 1}`}\n            className={props.currentPage === i + 1 ? \"is-active num\" : \"num\"}\n          >\n            {i + 1}\n          </Link>\n        </li>\n      ))}\n      {!props.isLast && (\n        <li>\n          <Link to={props.nextPage} rel=\"next\">\n            Next <span className=\"icon -right\"><RiArrowRightLine/></span>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n)\nclass BlogIndex extends React.Component {\n  render() {\n    \n    const { data } = this.props\n    const { currentPage, numPages } = this.props.pageContext\n    const blogSlug = '/blog/' \n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? blogSlug : blogSlug + (currentPage - 1).toString()\n    const nextPage = blogSlug + (currentPage + 1).toString()\n\n    const posts = data.allMarkdownRemark.edges\n      .filter(edge => !!edge.node.frontmatter.date)\n      .map(edge =>\n        <PostCard key={edge.node.id} data={edge.node} />\n      )\n    let props = {\n      isFirst,\n      prevPage,\n      numPages,\n      blogSlug,\n      currentPage,\n      isLast,\n      nextPage\n    }\n    \n    return (\n      <Layout className=\"blog-page\">\n        <SEO\n          title={\"Blog â€” Page \" + currentPage + \" of \" + numPages}\n          description={\"Stackrole base blog page \" + currentPage + \" of \" + numPages }\n        />\n        <h1>Blog</h1>\n        <div className=\"grids col-1 sm-2 lg-3\">\n          {posts}\n        </div>\n        <Pagination {...props} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex"],"sourceRoot":""}